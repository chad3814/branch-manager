services:
  postgres:
    image: postgres:15
    container_name: branch-manager-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=branch_manager_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./dev/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev-network

  postgres-test:
    image: postgres:15
    container_name: branch-manager-postgres-test
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=branch_manager_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev-network

  adminer:
    image: adminer:latest
    container_name: branch-manager-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev-network

  redis:
    image: redis:7-alpine
    container_name: branch-manager-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - dev-network

  # Optional: Run the branch-manager in development mode
  branch-manager-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: branch-manager-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/branch_manager_dev
      - BRANCH_MANAGEMENT_API_KEY=dev-api-key-123
      - DB_PREFIX=dev_
      - PORT=3001
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev-network
    profiles:
      - dev-container  # Only start with --profile dev-container

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
  postgres_test_data:
  redis_dev_data: